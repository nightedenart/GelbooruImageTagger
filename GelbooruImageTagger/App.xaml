<Application x:Class="GelbooruImageTagger.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:GelbooruImageTagger"
             xmlns:controls="clr-namespace:GelbooruImageTagger.Views.Controls"
             xmlns:converters="clr-namespace:GelbooruImageTagger.Converters"
             StartupUri="Views/Windows/MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Themes/Scrollbar.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <converters:PathToDirectoryNameConverter x:Key="PathToDirectoryNameConverter"/>
            <converters:PathToFileNameConverter x:Key="PathToFileNameConverter"/>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

            <FontFamily x:Key="SegoeFluentIcons">pack://application:,,,/Fonts/#Segoe Fluent Icons</FontFamily>

            <Style x:Key="CardBorderStyle" TargetType="{x:Type Border}">
                <Setter Property="Background" Value="#B3FFFFFF"/>
                <Setter Property="BorderBrush" Value="#0F000000"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="CornerRadius" Value="5"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsDarkMode, RelativeSource={RelativeSource AncestorType={x:Type controls:FluentWindow}}}" Value="True">
                        <Setter Property="Background" Value="#0CFFFFFF"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="AppBarButtonStyle" TargetType="{x:Type ButtonBase}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
                <Setter Property="Padding" Value="8"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Border Background="Transparent">
                                <Grid Margin="2">
                                    <Border x:Name="Bg" Background="{TemplateBinding Foreground}" CornerRadius="4" Opacity="0"/>
                                    <Border x:Name="AccentToggleBg" Background="{TemplateBinding Background}" CornerRadius="4" Opacity="0"/>
                                    <Border x:Name="Highlight" CornerRadius="4" BorderThickness="1,1,1,0" BorderBrush="#16FFFFFF" Visibility="Collapsed"/>
                                    <Border x:Name="Shadow" CornerRadius="4" BorderThickness="0,0,0,1" BorderBrush="#66000000" Visibility="Collapsed"/>
                                    <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="contentPresenter" Property="Opacity" Value=".5"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="Bg" Storyboard.TargetProperty="Opacity" To=".06" Duration="0:0:.083"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard FillBehavior="Stop">
                                                <DoubleAnimation Storyboard.TargetName="Bg" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.083"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="Bg" Storyboard.TargetProperty="Opacity" To=".04" Duration="0:0:.083"/>
                                                <DoubleAnimation Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity" To=".77" Duration="0:0:.083"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard FillBehavior="Stop">
                                                <DoubleAnimation Storyboard.TargetName="Bg" Storyboard.TargetProperty="Opacity" To=".06" Duration="0:0:.083"/>
                                                <DoubleAnimation Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.083"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="ToggleButton.IsChecked" Value="True">
                                    <Setter TargetName="Highlight" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="Shadow" Property="Visibility" Value="Visible"/>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="AccentToggleBg" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.083"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard FillBehavior="Stop">
                                                <DoubleAnimation Storyboard.TargetName="AccentToggleBg" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:.083"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="ToggleButton.IsChecked" Value="True"/>
                                        <Condition Property="IsPressed" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Highlight" Property="Visibility" Value="Collapsed"/>
                                    <Setter TargetName="Shadow" Property="Visibility" Value="Collapsed"/>
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity" To=".5" Duration="0:0:.083"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiTrigger.EnterActions>
                                    <MultiTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard FillBehavior="Stop">
                                                <DoubleAnimation Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:.083"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiTrigger.ExitActions>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="AppBarToggleButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource AppBarButtonStyle}">
                <Style.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Background" Value="#0067c0"/>
                        <Setter Property="Foreground" Value="#FFFFFF"/>
                    </Trigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                            <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="#1975c5"/>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                            <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="#3183ca"/>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=IsDarkMode, RelativeSource={RelativeSource AncestorType={x:Type controls:FluentWindow}}}" Value="True"/>
                            <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="#4cc2ff"/>
                        <Setter Property="Foreground" Value="#000000"/>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=IsDarkMode, RelativeSource={RelativeSource AncestorType={x:Type controls:FluentWindow}}}" Value="True"/>
                            <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                            <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="#47b1e8"/>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=IsDarkMode, RelativeSource={RelativeSource AncestorType={x:Type controls:FluentWindow}}}" Value="True"/>
                            <Condition Binding="{Binding Path=IsChecked, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                            <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="#42a1d2"/>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="AppBarSeparatorStyle" TargetType="{x:Type Separator}">
                <Setter Property="BorderBrush" Value="#0F000000"/>
                <Setter Property="Margin" Value="2,0"/>
                <Setter Property="Width" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Separator}">
                            <Border Width="{TemplateBinding Width}" Background="{TemplateBinding BorderBrush}" SnapsToDevicePixels="True">
                                <Border.OpacityMask>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Color="#00FFFFFF" Offset="0"/>
                                        <GradientStop Color="White" Offset=".025"/>
                                        <GradientStop Color="White" Offset=".975"/>
                                        <GradientStop Color="#00FFFFFF" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.OpacityMask>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Path=IsDarkMode, RelativeSource={RelativeSource AncestorType={x:Type controls:FluentWindow}}}" Value="True">
                        <Setter Property="BorderBrush" Value="#15FFFFFF"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type Hyperlink}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Foreground" Value="#003e92" />
                <Setter Property="TextBlock.TextDecorations" Value="{x:Null}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="#001a68" />
                    </Trigger>
                    <DataTrigger Binding="{Binding Path=IsDarkMode, RelativeSource={RelativeSource AncestorType={x:Type controls:FluentWindow}}}" Value="True">
                        <Setter Property="Foreground" Value="#99ebff" />
                    </DataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Path=IsDarkMode, RelativeSource={RelativeSource AncestorType={x:Type controls:FluentWindow}}}" Value="True"/>
                            <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Foreground" Value="#99ebff" />
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>
